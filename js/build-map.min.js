const TILE={CLASS:{WALL:"wall",SPACE:"space",PLAYER:"player",MOB:"mob",BOSS:"boss",CHEST:"chest",QUEST:"quest",GOAL:"goal"},CHAR:{WALL:"0",SPACE:".",PLAYER:"P",MOB:"m",BOSS:"B",CHEST:"X",QUEST:"!",GOAL:"?"}},MAP={LENGTH:{SM:2852,MD:5852,LG:10100},SIZE:{SM:51,MD:76,LG:100},SUBNUM:{SM:3,MD:4,LG:5},SUBSIZE:{SM:17,MD:19,LG:20}},getRandNum=e=>e<=1?0:Math.floor(Math.random()*e),displayContents=e=>{let s=document.getElementById("map");for(s.innerHTML="",i=0;i<e.contents.length;i++){let t=document.createElement("span"),a=document.createAttribute("class"),n=document.createElement("span"),o=document.createAttribute("class");if(e.contents[i]==TILE.CHAR.WALL)a.value="tile "+TILE.CLASS.WALL;else switch(a.value="tile "+TILE.CLASS.SPACE,e.contents[i]){case TILE.CHAR.SPACE:break;case TILE.CHAR.PLAYER:o.value="elmt "+TILE.CLASS.PLAYER,n.setAttributeNode(o),t.appendChild(n);break;case TILE.CHAR.MOB:o.value="elmt "+TILE.CLASS.MOB,n.setAttributeNode(o),t.appendChild(n);break;case TILE.CHAR.BOSS:o.value="elmt "+TILE.CLASS.BOSS,n.setAttributeNode(o),t.appendChild(n);break;case TILE.CHAR.CHEST:o.value="elmt "+TILE.CLASS.CHEST,n.setAttributeNode(o),t.appendChild(n);break;case TILE.CHAR.QUEST:o.value="elmt "+TILE.CLASS.QUEST,n.setAttributeNode(o),t.appendChild(n);break;case TILE.CHAR.GOAL:o.value="elmt "+TILE.CLASS.GOAL,n.setAttributeNode(o),t.appendChild(n);break;default:let e=document.createElement("br");s.appendChild(e);continue}t.setAttributeNode(a),s.appendChild(t)}},getMapObject=e=>{if(0==e.length)return console.log("no map entered"),null;let s=MAP.SIZE.SM,t=MAP.SUBSIZE.SM,a=Math.pow(MAP.SUBNUM.SM,2),n=[];e.length>MAP.LENGTH.SM&&(s=MAP.SIZE.MD,t=MAP.SUBSIZE.MD,a=Math.pow(MAP.SUBNUM.MD,2)),e.length>MAP.LENGTH.MD&&(s=MAP.SIZE.LG,t=MAP.SUBSIZE.LG,a=Math.pow(MAP.SUBNUM.LG,2));for(let e=0;e<a;e++)n.push("");let o="",l=0;for(i=0;i<e.length;i++)e[i]==TILE.CHAR.SPACE&&l++,o+=e[i];const u=l/5,r=l/4;let c=parseInt(document.getElementById("mobrate").value);c<=0&&(c=.1,document.getElementById("mobrate").value=0);let b=parseInt(document.getElementById("playerrate").value);b<=0&&(b=.1,document.getElementById("playerrate").value=0);let p=parseInt(document.getElementById("bossrate").value);p<=0&&(p=.1,document.getElementById("bossrate").value=0);let m=parseInt(document.getElementById("questrate").value);m<=0&&(m=.1,document.getElementById("questrate").value=0);let d=parseInt(document.getElementById("goalrate").value);d<=0&&(d=.1,document.getElementById("goalrate").value=0);let g=parseInt(document.getElementById("chestrate").value);g<=0&&(g=.1,document.getElementById("chestrate").value=0);let h=parseInt(document.getElementById("successrate").value);return h<=0&&(h=.1,document.getElementById("successrate").value=0),{contents:o,size:s,subsize:t,emptySpaces:l,mobsMin:u,mobsMax:r,mobrate:c,playerrate:b,bossrate:p,questrate:m,goalrate:d,chestrate:g,successrate:h,mobs:[],quests:[],goals:[],chests:[],submaps:n,player:null,boss:null}},populateMap=e=>{if(null==e)return console.log("no map entered"),!1;return e.playerrate+e.bossrate+e.questrate+e.goalrate+e.chestrate>=e.mobrate?(console.log("too few mobs compared to other interactive elements"),!1):e.mobrate+e.playerrate+e.bossrate+e.questrate+e.goalrate+e.chestrate>=1e3?(console.log("too many interactive elements"),!1):(populateMobs(e),populateOthers(e),!0)},populateMobs=e=>{if(null==e)return console.log("no map entered"),!1;let s="",t=e.contents,a=0,n=0;for(;e.mobs.length<e.mobsMin;){for(i=0;i<t.length;i++){if(t[i]===TILE.CHAR.SPACE&&e.mobs.length<e.mobsMax){let o=getRandNum(1e3),l=getRandNum(100);o<e.mobrate&&l<e.successrate?(s+=TILE.CHAR.MOB,e.mobs.push({x:a,y:n})):s+=t[i]}else s+=t[i];"\n"!=t[i]&&(a++,a>=e.size&&(a=0,n++))}console.log("Mobs placed: ",e.mobs.length),t=s,s="",a=0,n=0}return e.contents=t,!0},populateOthers=e=>{if(null==e)return console.log("no map entered"),!1;let s="",t=e.contents,a=0,n=0;for(console.log("checking while conditions ...");null==e.player||null==e.boss||e.quests.length<1||e.goals.length<e.quests.length||e.chests.length<1;){for(console.log("Placing interactive elements ..."),i=0;i<t.length;i++){if(t[i]===TILE.CHAR.SPACE){let o=getRandNum(1e3);getRandNum(100)>=successrate?s+=t[i]:o<e.playerrate?null!=e.player?s+=t[i]:(console.log("Placing player spawning point ..."),s+=TILE.CHAR.PLAYER,e.player={x:a,y:n}):o<e.playerrate+e.bossrate?null!=e.boss?s+=t[i]:(console.log("Placing boss ..."),s+=TILE.CHAR.BOSS,e.boss={x:a,y:n}):o<e.playerrate+e.bossrate+e.questrate?e.quests.length>=Math.sqrt(e.submaps.length)?s+=t[i]:(console.log("Placing quest ..."),s+=TILE.CHAR.QUEST,e.quests.push({x:a,y:n})):o<e.playerrate+e.bossrate+e.questrate+e.goalrate?e.goals.length>=e.quests.length?s+=t[i]:(console.log("Placing goal ..."),s+=TILE.CHAR.GOAL,e.goals.push({x:a,y:n})):o<e.playerrate+e.bossrate+e.questrate+e.goalrate+e.chestrate?e.chests.length>=e.submaps.length?s+=t[i]:(console.log("Placing treasure chest ..."),s+=TILE.CHAR.CHEST,e.chests.push({x:a,y:n})):s+=t[i]}else s+=t[i];"\n"!=t[i]&&(a++,a>=e.size&&(a=0,n++))}console.log("Interactive elements placed."),t=s,s="",a=0,n=0}return e.contents=t,!0},downloadMap=e=>{const s=new Blob([e.contents],{type:"text/plain;charset=utf-8"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(s,"generated-map.txt");else{let e=document.getElementById("download");const t=URL.createObjectURL(s);e.href=t,e.download="generated-map.txt"}},divideMap=e=>{if(null==e)return!1;let s=0,t=0;for(let a=0;a<e.contents.length;a++)"\n"!=e.contents[a]&&(9==e.submaps.length?t<e.subsize?(s<e.subsize&&(e.submaps[0]+=e.contents[a]),s<2*e.subsize&&(e.submaps[1]+=e.contents[a]),s<3*e.subsize&&(e.submaps[2]+=e.contents[a])):t<2*e.subsize?(s<e.subsize&&(e.submaps[3]+=e.contents[a]),s<2*e.subsize&&(e.submaps[4]+=e.contents[a]),s<3*e.subsize&&(e.submaps[5]+=e.contents[a])):t<3*e.subsize&&(s<e.subsize&&(e.submaps[6]+=e.contents[a]),s<2*e.subsize&&(e.submaps[7]+=e.contents[a]),s<3*e.subsize&&(e.submaps[8]+=e.contents[a])):16==e.submaps.length?t<e.subsize?(s<e.subsize&&(e.submaps[0]+=e.contents[a]),s<2*e.subsize&&(e.submaps[1]+=e.contents[a]),s<3*e.subsize&&(e.submaps[2]+=e.contents[a]),s<4*e.subsize&&(e.submaps[3]+=e.contents[a])):t<2*e.subsize?(s<e.subsize&&(e.submaps[4]+=e.contents[a]),s<2*e.subsize&&(e.submaps[5]+=e.contents[a]),s<3*e.subsize&&(e.submaps[6]+=e.contents[a]),s<4*e.subsize&&(e.submaps[7]+=e.contents[a])):t<3*e.subsize?(s<e.subsize&&(e.submaps[8]+=e.contents[a]),s<2*e.subsize&&(e.submaps[9]+=e.contents[a]),s<3*e.subsize&&(e.submaps[10]+=e.contents[a]),s<4*e.subsize&&(e.submaps[11]+=e.contents[a])):t<4*e.subsize&&(s<e.subsize&&(e.submaps[12]+=e.contents[a]),s<2*e.subsize&&(e.submaps[13]+=e.contents[a]),s<3*e.subsize&&(e.submaps[14]+=e.contents[a]),s<4*e.subsize&&(e.submaps[15]+=e.contents[a])):25==e.submaps.length&&(t<e.subsize?(s<e.subsize&&(e.submaps[0]+=e.contents[a]),s<2*e.subsize&&(e.submaps[1]+=e.contents[a]),s<3*e.subsize&&(e.submaps[2]+=e.contents[a]),s<4*e.subsize&&(e.submaps[3]+=e.contents[a]),s<5*e.subsize&&(e.submaps[4]+=e.contents[a])):t<2*e.subsize?(s<e.subsize&&(e.submaps[5]+=e.contents[a]),s<2*e.subsize&&(e.submaps[6]+=e.contents[a]),s<3*e.subsize&&(e.submaps[7]+=e.contents[a]),s<4*e.subsize&&(e.submaps[8]+=e.contents[a]),s<5*e.subsize&&(e.submaps[9]+=e.contents[a])):t<3*e.subsize?(s<e.subsize&&(e.submaps[10]+=e.contents[a]),s<2*e.subsize&&(e.submaps[11]+=e.contents[a]),s<3*e.subsize&&(e.submaps[12]+=e.contents[a]),s<4*e.subsize&&(e.submaps[13]+=e.contents[a]),s<5*e.subsize&&(e.submaps[14]+=e.contents[a])):t<4*e.subsize?(s<e.subsize&&(e.submaps[15]+=e.contents[a]),s<2*e.subsize&&(e.submaps[16]+=e.contents[a]),s<3*e.subsize&&(e.submaps[17]+=e.contents[a]),s<4*e.subsize&&(e.submaps[18]+=e.contents[a]),s<5*e.subsize&&(e.submaps[19]+=e.contents[a])):t<5*e.subsize&&(s<e.subsize&&(e.submaps[20]+=e.contents[a]),s<2*e.subsize&&(e.submaps[21]+=e.contents[a]),s<3*e.subsize&&(e.submaps[22]+=e.contents[a]),s<4*e.subsize&&(e.submaps[23]+=e.contents[a]),s<5*e.subsize&&(e.submaps[24]+=e.contents[a]))),s<e.size?s++:(s=0,t++));return!0},scoreMap=e=>{if(null==e)return!1;let s=document.getElementById("score");divideMap(e),console.log("Map to evaluate: ",e);let t=evalDistPlayerBoss(e);console.log("Player / Boss score: ",t);let a=evalMobsSpread(e);console.log("Mob spread score: ",a);let n=evalQuestsSpread(e);console.log("Quest spread score: ",n);let o=evalTreasureSpread(e);console.log("Chest spread score: ",o);let l=25*(t+a+n+o)/4;console.log("Map score: ",l),s.value=l},evalDistPlayerBoss=e=>{console.log("Player coord: \n x: ",e.player.x,"\n y: ",e.player.y),console.log("boss coord: \n x: ",e.boss.x,"\n y: ",e.boss.y);let s=Math.sqrt(Math.pow(Math.abs(e.boss.x-e.player.x),2)+Math.pow(Math.abs(e.boss.y-e.player.y),2));console.log("distance: ",s),console.log("map size: ",e.size);let t=0;return s<e.size/2?t=0:s<2*e.size/3?t=1:s<3*e.size/4?t=2:s<4*e.size/5?t=3:s<6*e.size/5?t=4:s<5*e.size/4?t=3:s<4*e.size/3?t=2:s<3*e.size/2&&(t=1),t},evalQuestsSpread=e=>{let s=0,t=0;for(let a=0;a<e.submaps.length;a++){for(let s=0;s<e.submaps[a].length;s++)e.submaps[a][s]!=TILE.CHAR.QUEST&&e.submaps[a][s]!=TILE.CHAR.GOAL||t++;t>s&&(s=t)}let a=0;switch(s){case 1:a=4;break;case 2:a=2;break;case 3:a=1}return a},evalTreasureSpread=e=>{let s=0,t=0;for(let a=0;a<e.submaps.length;a++){for(let s=0;s<e.submaps[a].length;s++)e.submaps[a][s]==TILE.CHAR.CHEST&&t++;t>s&&(s=t)}let a=0;switch(s){case 1:a=4;break;case 2:a=2;break;case 3:a=1}return a},evalMobsSpread=e=>{let s=0,t=1e3,a=0;for(let n=0;n<e.submaps.length;n++){for(let s=0;s<e.submaps[n].length;s++)e.submaps[n][s]==TILE.CHAR.MOB&&a++;a<t&&(t=a),a>s&&(s=a)}let n=0;return s-t<2?n=4:s-t<4?n=3:s-t<6?n=2:s-t<8&&(n=1),n},loadFile=e=>{fetch(e,{method:"GET",headers:{"Content-Type":"text/plain"}}).then(e=>{200===e.status?e.text().then(e=>{let s=getMapObject(e);populateMap(s),downloadMap(s),displayContents(s),scoreMap(s)}):console.log("Looks like there was a problem. Status Code: "+e.status)}).catch(e=>{console.log("Fetch Error :-S",e)})},loadMap=()=>{fetch("./assets/map.txt",{method:"GET",headers:{"Content-Type":"text/plain"}}).then(e=>{200===e.status?e.text().then(e=>{let s=getMapObject(e);populateMap(s),downloadMap(s),displayContents(s),scoreMap(s)}):console.log("Looks like there was a problem. Status Code: "+e.status)}).catch(e=>{console.log("Fetch Error :-S",e)})};fetch("./assets/map.txt",{method:"GET",headers:{"Content-Type":"text/plain"}}).then(e=>{200===e.status?e.text().then(e=>{let s=getMapObject(e);populateMap(s),downloadMap(s),displayContents(s),scoreMap(s)}):console.log("Looks like there was a problem. Status Code: "+e.status)}).catch(e=>{console.log("Fetch Error :-S",e)});