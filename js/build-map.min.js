const TILE={CLASS:{WALL:"wall",SPACE:"space",PLAYER:"player",MOB:"mob",BOSS:"boss",CHEST:"chest",QUEST:"quest",GOAL:"goal"},CHAR:{WALL:"0",SPACE:".",PLAYER:"P",MOB:"m",BOSS:"B",CHEST:"X",QUEST:"!",GOAL:"?"}},displayContents=e=>{let t=document.getElementById("map");for(t.innerHTML="",i=0;i<e.length;i++){let l=document.createElement("span"),a=document.createAttribute("class"),o=document.createElement("span"),n=document.createAttribute("class");if(e[i]==TILE.CHAR.WALL)a.value="tile "+TILE.CLASS.WALL;else switch(a.value="tile "+TILE.CLASS.SPACE,e[i]){case TILE.CHAR.SPACE:break;case TILE.CHAR.PLAYER:n.value="elmt "+TILE.CLASS.PLAYER,o.setAttributeNode(n),l.appendChild(o);break;case TILE.CHAR.MOB:n.value="elmt "+TILE.CLASS.MOB,o.setAttributeNode(n),l.appendChild(o);break;case TILE.CHAR.BOSS:n.value="elmt "+TILE.CLASS.BOSS,o.setAttributeNode(n),l.appendChild(o);break;case TILE.CHAR.CHEST:n.value="elmt "+TILE.CLASS.CHEST,o.setAttributeNode(n),l.appendChild(o);break;case TILE.CHAR.QUEST:n.value="elmt "+TILE.CLASS.QUEST,o.setAttributeNode(n),l.appendChild(o);break;case TILE.CHAR.GOAL:n.value="elmt "+TILE.CLASS.GOAL,o.setAttributeNode(n),l.appendChild(o);break;default:let s=document.createElement("br");t.appendChild(s);continue}l.setAttributeNode(a),t.appendChild(l)}},populateMap=e=>{let t="",l="";return t=populateMobs(e),console.log("Temporary output:\n",t),l=populateOthers(t),console.log("Final output:\n",l),l},populateMobs=e=>{let t="",l="",a=0,o=0;for(i=0;i<e.length;i++)e[i]===TILE.CHAR.SPACE&&a++,l+=e[i];console.log("Available Slots: ",a);const n=a/5,s=a/4;for(;o<n;){for(i=0;i<l.length;i++)if(l[i]===TILE.CHAR.SPACE&&o<s){0==Math.floor(4*Math.random())?(t+=TILE.CHAR.MOB,o++):t+=l[i]}else t+=l[i];console.log("Mobs placed: ",o),l=t,t=""}return l},populateOthers=e=>{let t="",l=e,a=document.getElementById("ratiobase").value,o=0,n=0,s=0,r=!1,d=!1;for(;!d||!r||n<1||s<n||o<1;){for(console.log("Placing interactive elements ..."),i=0;i<l.length;i++)if(l[i]===TILE.CHAR.SPACE){let e=Math.floor(Math.random()*a);e<1?d?t+=l[i]:(console.log("Placing player spawning point ..."),t+=TILE.CHAR.PLAYER,d=!0):e<2?r?t+=l[i]:(console.log("Placing boss ..."),t+=TILE.CHAR.BOSS,r=!0):e<4?n>=3?t+=l[i]:(console.log("Placing quest ..."),t+=TILE.CHAR.QUEST,n++):e<6?s>=n?t+=l[i]:(console.log("Placing goal ..."),t+=TILE.CHAR.GOAL,s++):e<9?o>=10?t+=l[i]:(console.log("Placing treasure chest ..."),t+=TILE.CHAR.CHEST,o++):t+=l[i]}else t+=l[i];l=t,t="",console.log("Interactive elements placed.")}return l},downloadMap=e=>{const t=new Blob([e],{type:"text/plain;charset=utf-8"});if(window.navigator.msSaveOrOpenBlob)window.navigator.msSaveOrOpenBlob(t,"generated-map.txt");else{let e=document.getElementById("download");const l=URL.createObjectURL(t);e.href=l,e.download="generated-map.txt"}},scoreMap=e=>{document.getElementById("score")},evalDistPlayerBoss=e=>{},evalQuestsSpread=e=>{},evalTreasureSpread=e=>{},evalMobsSpread=e=>{},loadFile=e=>{fetch(e,{method:"GET",headers:{"Content-Type":"text/plain"}}).then(e=>{200===e.status?e.text().then(e=>{let t=populateMap(e);downloadMap(t),displayContents(t)}):console.log("Looks like there was a problem. Status Code: "+e.status)}).catch(e=>{console.log("Fetch Error :-S",e)})},loadMap=()=>{loadFile("./assets/map.txt")};loadFile("./assets/map.txt");